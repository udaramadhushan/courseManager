/**
 * A convenient object to interact with dot files
 */
export interface Dotfile {
    /** delete the file */
    delete: () => Promise<void>;
    /** check if the file exists */
    exists: () => Promise<boolean>;
    /** read the content of the file */
    read: <T = object>() => Promise<T>;
    /** write the content of the file */
    write: <T = object>(obj: T) => Promise<T>;
}
/**
 * Delete, Read, Write, or Exist Dotfiles
 *
 * @param {__dirname} dirname The relative dirname
 * @param {string} name The dotfile name
 * @return {Dotfile} `delete`, `exists`, `read` and `write` Promises
 */
declare const dotf: (dirname: string, name: string) => Dotfile;
export default dotf;
